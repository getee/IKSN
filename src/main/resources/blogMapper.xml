<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="group.first.iksn.model.dao.BlogDAO">
    <!--定义的一个reaultmap结果集合来存储关联查询到的详细的博客，类型是自定义类型-->
    <resultMap id="searchBlog" type="Blog">

        <id property="bid" column="bid"></id>
        <result property="title" column="title"></result>
        <result property="content" column="content"></result>
        <result property="classify" column="classify"></result>
        <result property="link" column="link"></result>
        <result property="points" column="points"></result>
        <result property="time" column="time"></result>

        <association property="blogTag" javaType="BlogTag">
            <id property="id" column="id"></id>
            <result property="bid" column="bid"></result>
            <result property="btag" column="btag"></result>
        </association>

        <association property="userToBlog" javaType="UserToBlog">
            <id property="id" column="id"></id>
            <result property="uid" column="uid"></result>
            <result property="bid" column="bid"></result>
            <result property="isdraft" column="isdraft"></result>
            <result property="ispublic" column="ispublic"></result>
            <result property="blogtype" column="blogtype"></result>
        </association>
    </resultMap>
    <!--根据用户ID来查出用户已经发表的博客信息-->
    <select id="processScanBlog" resultMap="searchBlog">
        select b.* ,u.*,t.* from blog as b
        inner join usertoblog as u on u.bid=b.bid
        inner join blogtag as t on t.bid=b.bid
        where u.uid=#{uid}
    </select>
    <!--根据博客ID来准确查出博客信息-->
    <select id="processListBlog" resultMap="searchBlog">
        select b.* ,u.*,t.* from blog as b
        inner join usertoblog as u on u.bid=b.bid
        inner join blogtag as t on t.bid=b.bid
        where b.bid=#{bid}
    </select>

<!--博客添加相关操作-->
    <insert id="processAddBlog" parameterType="Blog" useGeneratedKeys="true" keyColumn="bid">
        insert into blog(title,content,time,classify) values (#{title},#{content},#{time},#{classify})
    </insert>
    <select id="selectBid" resultType="int">
        select bid from blog where time=#{time}
    </select>
    <insert id="processAddBlogTag" parameterType="BlogTag" useGeneratedKeys="true" keyColumn="id">
        insert into blogtag(bid,btag) values (#{bid},#{btag})
    </insert>
    <insert id="processAddUserToBlog" parameterType="UserToBlog" useGeneratedKeys="true" keyColumn="id">
        insert into usertoblog(uid,bid,ISDRAFT,ISPUBLIC,BLOGTYPE) values (#{uid},#{bid},#{isdraft},#{ispublic},#{blogtype})
    </insert>
    <!--博客修改相关操作-->


    <!--向illegalblog表中插入违规博客信息-->
    <insert id="addIllegalblog" parameterType="IllegalBlog">
        insert into illegalblog(bid,illegalcause) values (#{bid},#{illegalcause})
    </insert>

    <!--从reportBlog表中根据id删除一个选中行-->
    <delete id="deleteBlogFromReport" parameterType="ReportBlog">
      delete from reportblog where id = #{report_id}
    </delete>
    <!--从blog表中根据id删除一个博客信息-->
    <delete id="deleteBlog" parameterType="Blog">
      delete from blog where BID = #{bid}
    </delete>
    <!--删除与blog表相关的信息，illegalblog，blogtag，blogbrowsed，blogcomments，collectblog，usertoblog，reportblog-->
    <delete id="deleteBlogOthers" parameterType="Blog">
      DELETE r,b,bb,bc,cb,utb,ib FROM reportblog r
      LEFT OUTER JOIN blogtag b  ON b.BID = r.BID
      LEFT OUTER JOIN blogbrowsed bb  ON bb.BID = r.BID
      LEFT OUTER JOIN blogcomments bc  ON bc.BID = r.BID
      LEFT OUTER JOIN collectblog cb  ON cb.BID = r.BID
      LEFT OUTER JOIN usertoblog utb  ON utb.BID = r.BID
      LEFT OUTER JOIN illegalblog ib  ON ib.BID = r.BID
      WHERE r.BID=#{bid}
    </delete>


    <!--设置博客为不公开-->
    <update id="blogIsPublic" parameterType="UserToBlog">
        update usertoblog set ISPUBLIC=1 where BID=#{bid};
    </update>


    <!--结果集合用来存储查询ReportBlog表级联查询blog表-->
    <resultMap id="getBlogBy_Reportbid" type="ReportBlog">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>
        <result column="reason" property="reason"/>


        <association property="blog" column="bid" javaType="Blog">
            <id column="bid" property="bid"/>
            <result column="title" property="title"/>
        </association>
    </resultMap>
    <select id="getAllReportBlog" resultMap="getBlogBy_Reportbid">
		select  i.ID,i.BID,i.REASON,b.TITLE  from reportblog as i
		inner join blog as b on   i.BID=b.BID ORDER BY i.ID asc limit #{page},3;
	</select>

    <!-- 博客评论 -->
    <insert id="commentBlog" parameterType="BlogComments">
        insert into blogcomments(uid,bid,time,content,floor) value (#{uid},#{bid},#{time},#{content},#{floor})
    </insert>
    <!--博客评论回复-->
    <insert id="answerDiscuss" parameterType="BlogComments">
        insert into blogcomments(uid,bid,time,content,COMMENTID,floor) value (#{uid},#{bid},#{time},#{content},#{commentid},#{floor})
    </insert>


    <select id="selectFloor" resultType="String">
        select count(*) from blogcomments where BID=(#{bid}) and COMMENTID is null
    </select>

    <!--结果集合用来存储查询ReportResource表级联查询Resource表-->
    <resultMap id="getResourceBy_Reportrid" type="ReportResource">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>
        <result column="reason" property="reason"/>


        <association property="resource" column="rid" javaType="Resource">
            <id column="rid" property="rid"/>
            <result column="name" property="name"/>
        </association>
    </resultMap>
    <select id="getAllReportResource" resultMap="getResourceBy_Reportrid">
		select  rr.ID,rr.RID,rr.REASON,r.NAME  from reportresource as rr
		inner join resource as r on   rr.RID=r.RID ORDER BY rr.ID asc limit 0,3;
	</select>

    <!--举报博客-->
    <insert id="reportBlog" parameterType="ReportBlog">
        insert into reportblog (uid,bid,reason) values (#{uid},#{bid},#{reason})
    </insert>

    <!--这是有关blog搜索的查询-->
    <!--定义的一个reaultmap结果集合来存储关联查询到的详细的博客，类型是自定义类型-->
    <resultMap id="searchResultMap"  type="Blog">
        <id property="bid" column="bid"></id>
        <result property="title" column="title"></result>
        <result property="content" column="content"></result>
        <result property="classify" column="classify"></result>
        <result property="link" column="link"></result>
        <result property="points" column="points"></result>
        <result property="time" column="time"></result>

        <association property="userToBlog" javaType="UserToBlog" >
            <id property="id" column="id"></id>
            <result property="bid" column="bid"></result>
            <!--userToBlog关联user的resultMap结果集-->
           <!-- <association property="uid" column="uid" select="sUser"></association>-->
        </association>

    <!-- 对博客标签来说，一条博客对应多条标签-->
        <collection property="blogTags" ofType="BlogTag">
            <id property="id" column="id"></id>
            <result property="bid" column="bid"></result>
            <result property="btag" column="btag"></result>
        </collection>

    </resultMap>
    <select id="detailedBlogSearchResultMap" resultMap="searchResultMap" >
       select b.* ,ub.*,t.* from blog as b
        inner join usertoblog as ub on ub.bid=b.bid
        inner join blogtag as t on t.bid=b.bid
       where  b.TITLE like '%' #{s} '%'
    </select>
    <select id="reportBlogNum" resultType="Integer">
        select count(*) from reportblog
    </select>

   <!-- <select id="sUser" resultMap="sUser">
        select u.*,ub.* from usertoblog as ub
        inner join user as u on u.uid=ub.uid
    </select>
    <resultMap id="sUser" type="User">
         <id property="uid" column="uid"></id>
         <result property="nickname" column="nickname"></result>
    </resultMap>-->



    <!--关于blog首页推送的查询-->
 <!--   <resultMap id="blogsPush" type="BlogBrowsed">
        <id property="id" column="id"></id>
        <result property="browsetime" column="browsetime"></result>

        <association property="blog" javaType="Blog">
            <id property="bid" column="bid"></id>
            <result property="title" column="title"></result>
            <result property="content" column="content"></result>
            <result property="classify" column="classify"></result>
            <result property="link" column="link"></result>
            <result property="points" column="points"></result>
            <result property="time" column="time"></result>
        </association>

        <association property="user" javaType="User">
            <id property="uid" column="uid"></id>
            <result property="nickanme" column="nickname"></result>
        </association>
    </resultMap>
    <select id="detailedBlogPush" resultMap="blogsPush">
        select s.*,b.*,u.NICKNAME from blogbrowsed as s
           inner join blog as b on b.bid=s.bid
           inner join user as u on u.uid=s.uid
          order by b.POINTS desc limit 0,5

    </select>-->
    <select id="detailedBlogPush" resultType="Blog">
        select * from blog order by points desc
    </select>

    <!--结果集合通过usertoblog查user是否禁言-->
    <resultMap id="getUserIsSpeakMap" type="UserToBlog">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>

        <association property="user" column="uid" javaType="User">
            <id column="uid" property="uid"/>
            <result column="isspeak" property="isspeak"/>
        </association>
    </resultMap>
    <select id="getUserIsSpeak" resultMap="getUserIsSpeakMap">
		select  ub.ID,ub.UID,u.ISSPEAK
          from usertoblog ub
          LEFT OUTER JOIN user u ON u.UID = ub.UID
          where ub.BID=#{bid}
	</select>

    <update id="shutUptoUser" parameterType="integer">
        update user set ISSPEAK=1 where UID=1
    </update>

    <!--我收藏的博客-->
       <select id="myCollectBlog" resultType="Blog">
        SELECT title, time FROM blog WHERE  BID IN ( SELECT BID FROM  collectblog WHERE UID=uid)
    </select>
    <!--我发布的博客-->
    <select id="myBlog" resultType="Blog">
      SELECT title, time FROM blog WHERE  BID IN ( SELECT BID FROM  usertoblog WHERE UID=uid)
    </select>
</mapper>